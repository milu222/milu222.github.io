(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{435:function(v,_,s){"use strict";s.r(_);var p=s(1),e=Object(p.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("less与"),_("a",{attrs:{href:"https://so.csdn.net/so/search?q=sass&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[v._v("sass"),_("OutboundLink")],1),v._v("的区别")]),v._v(" "),_("p",[v._v("​        在介绍less和sass的区别之前，我们先来了解一下他们的定义：")]),v._v(" "),_("p",[_("strong",[v._v("一、Less、Sass/Scss是什么?")])]),v._v(" "),_("blockquote",[_("p",[_("strong",[v._v("1、Less：")])]),v._v(" "),_("p",[v._v("​    是一种动态样式语言. 对CSS赋予了动态语言的特性，如变量、继承、运算、函数。")]),v._v(" "),_("p",[v._v("​    Less 既可以在客户端上运行 (支持IE 6+, "),_("a",{attrs:{href:"https://so.csdn.net/so/search?q=Webkit&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[v._v("Webkit"),_("OutboundLink")],1),v._v(", Firefox)，也可在服务端运行。")])]),v._v(" "),_("blockquote",[_("p",[v._v("2、Sass：")]),v._v(" "),_("p",[v._v("​    是一种动态样式语言，Sass语法属于缩排语法，")]),v._v(" "),_("p",[v._v("​    比css比多出好些功能(如变量、"),_("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E5%B5%8C%E5%A5%97&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[v._v("嵌套"),_("OutboundLink")],1),v._v("、运算,混入(Mixin)、继承、颜色处理，函数等)，更容易阅读。")])]),v._v(" "),_("blockquote",[_("p",[v._v("Sass与Scss是什么关系?")]),v._v(" "),_("p",[v._v("Sass的缩排语法，对于写惯css前端的web开发者来说很不直观，也不能将css代码加入到Sass里面，因此sass语法进行了改良，Sass 3就变成了Scss(sassy css)。与原来的语法兼容，只是用{}取代了原来的缩进。")])]),v._v(" "),_("p",[_("strong",[v._v("二、less和sass的相同之处")])]),v._v(" "),_("blockquote",[_("p",[v._v("Less和Sass在语法上有些共性，比如下面这些：")]),v._v(" "),_("p",[_("strong",[v._v("1、混入(Mixins)")]),v._v("——class中的class；")]),v._v(" "),_("p",[_("strong",[v._v("2、参数混入")]),v._v("——可以传递参数的class，就像函数一样；")]),v._v(" "),_("p",[_("strong",[v._v("3、嵌套规则")]),v._v("——Class中嵌套class，从而减少重复的代码；")]),v._v(" "),_("p",[_("strong",[v._v("4、运算")]),v._v("——CSS中用上数学；")]),v._v(" "),_("p",[_("strong",[v._v("5、颜色功能")]),v._v("——可以编辑颜色；")]),v._v(" "),_("p",[_("strong",[v._v("6、名字空间(namespace)")]),v._v("——分组样式，从而可以被调用；")]),v._v(" "),_("p",[_("strong",[v._v("7、作用域")]),v._v("——局部修改样式；")]),v._v(" "),_("p",[_("strong",[v._v("8、JavaScript 赋值")]),v._v("——在CSS中使用JavaScript表达式赋值。")])]),v._v(" "),_("p",[_("strong",[v._v("三、less和sass的区别")])]),v._v(" "),_("blockquote",[_("p",[v._v("​    Less和Sass的主要不同就是他们的实现方式。")]),v._v(" "),_("p",[v._v("​    Less是基于JavaScript，是在客户端处理的。")]),v._v(" "),_("p",[v._v("​    Sass是基于Ruby的，是在服务器端处理的。")]),v._v(" "),_("p",[v._v("​    关于变量在Less和Sass中的唯一区别就是Less用@，Sass用$。")])]),v._v(" "),_("p",[_("strong",[v._v("1、Less：")])]),v._v(" "),_("blockquote",[_("p",[v._v("【两种注释方式】")]),v._v(" "),_("p",[v._v("①//less中的注释，但这种不会被编译")]),v._v(" "),_("p",[v._v("②/*")]),v._v(" "),_("p",[v._v("* 这也是less中的注释，但是会被编译")]),v._v(" "),_("p",[v._v("*/")])]),v._v(" "),_("p",[v._v("【less中的变量】")]),v._v(" "),_("p",[v._v("1、声明变量:")]),v._v(" "),_("blockquote",[_("p",[v._v("​    @变量名:变量值;")]),v._v(" "),_("p",[v._v("​    使用变量: @变量名")]),v._v(" "),_("p",[v._v("​    >>>"),_("strong",[v._v("less中变量的类型：")])]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("①数字类")]),v._v(" 1 10px")]),v._v(" "),_("p",[v._v('​    **②字符串：**无引号字符串 red ;有引号字符串 "haha"')]),v._v(" "),_("p",[v._v("​    **③颜色类：**red #000000 rgb()")]),v._v(" "),_("p",[v._v("​    **④值列表类型：**用逗号和空格分隔 10px solid red")]),v._v(" "),_("p",[v._v("​    >>>"),_("strong",[v._v("变量使用原则：")])]),v._v(" "),_("p",[v._v("​    多次频繁出现的值、需要修改的值，设为变量")])]),v._v(" "),_("p",[v._v("2、混合(MiXins)")]),v._v(" "),_("blockquote",[_("p",[v._v("​    "),_("strong",[v._v("①无参混合")])]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("声明：")]),v._v(".name{}")]),v._v(" "),_("p",[v._v("​    选择器中"),_("strong",[v._v("调用：")]),v._v(".name;")]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("②代参混合")])]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("无默认值")])]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("声明：")]),v._v(".name(@param){}")]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("调用：")]),v._v(".name(parValue);")]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("有默认值")])]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("声明：")]),v._v(".name(@param:value){}")]),v._v(" "),_("p",[v._v("​    "),_("strong",[v._v("调用：")]),v._v(".name(parValue); //parValue可省")]),v._v(" "),_("p",[v._v("​    >>>如果声明时，参数没有默认值，则调用时必须赋值，否则报错！")]),v._v(" "),_("p",[v._v("​    >>>无参混合，会在css中编译除同名的class选择器，有参的不会")])]),v._v(" "),_("p",[v._v("3、less的匹配模式：")]),v._v(" "),_("blockquote",[_("p",[v._v("使用混合进行匹配，类似于if结构")]),v._v(" "),_("p",[_("strong",[v._v("声明：")])]),v._v(" "),_("p",[v._v(".name(条件一，参数){}")]),v._v(" "),_("p",[v._v(".name(条件二，参数){}")]),v._v(" "),_("p",[v._v(".name(@_,参数){}")]),v._v(" "),_("p",[_("strong",[v._v("调用：")])]),v._v(" "),_("p",[v._v(".name(条件值，参数值);")]),v._v(" "),_("p",[v._v('**匹配规则：**根据调用时提供的条件值去寻找与之匹配的"MiXins"执行，其中@_表示永远需要执行的部分')])]),v._v(" "),_("p",[v._v("4、less中的运算")]),v._v(" "),_("blockquote",[_("p",[v._v("+ - * / 可带、可不带单位")]),v._v(" "),_("p",[v._v("颜色运算时，红绿蓝分三组计算，组内可进位，组间互不干涉")])]),v._v(" "),_("p",[v._v("5、包含了传进来的所有参数：")]),v._v(" "),_("blockquote",[_("p",[v._v("border:@arguments;")])]),v._v(" "),_("p",[v._v("6、less中的嵌套：保留HTML中的代码结构")]),v._v(" "),_("blockquote",[_("p",[v._v("①嵌套默认是后代选择器，如果需要子代选择器，则在子代前加>")]),v._v(" "),_("p",[v._v("②.&表示上一层 &:表示上一层的hover事件")])]),v._v(" "),_("p",[_("strong",[v._v("2、Sass：")])]),v._v(" "),_("p",[v._v("1、Sass中的变量")]),v._v(" "),_("blockquote",[_("p",[v._v("使用 $变量名：变量值，声明变量；")]),v._v(" "),_("p",[v._v("如果变量需要在字符串中嵌套，则需使用#加大括号包裹；")]),v._v(" "),_("p",[v._v("border-#{$left}:10px solid blue;")])]),v._v(" "),_("p",[v._v("2、Sass中的运算")]),v._v(" "),_("blockquote",[_("p",[v._v("会将单位也进行运算，使用时需注意最终单位例：10px"),_("em",[v._v("10px=100px")]),v._v("px")])]),v._v(" "),_("p",[v._v("3、sass中的嵌套：")]),v._v(" "),_("blockquote",[_("p",[v._v("选择器嵌套，属性嵌套，伪类嵌套")]),v._v(" "),_("p",[_("strong",[v._v("选择器嵌套")]),v._v("：")]),v._v(" "),_("p",[v._v("ul{ li{} } 后代")]),v._v(" "),_("p",[v._v("​           ul{ >li{} } 子代")]),v._v(" "),_("p",[v._v('&:表示上一层 div{ ul{ li{ &=="div ul li" } } }')]),v._v(" "),_("p",[_("strong",[v._v("属性嵌套：")])]),v._v(" "),_("p",[v._v("属性名与大括号之间必须有:")]),v._v(" "),_("p",[v._v("例如:border:{color:red;}")]),v._v(" "),_("p",[v._v('**伪类嵌套：**ul{li{ &:hover{ "ul li:hover" } } }')])]),v._v(" "),_("p",[v._v("4、混合宏、继承、占位符")]),v._v(" "),_("blockquote",[_("p",[_("strong",[v._v("①混合宏：")])]),v._v(" "),_("p",[_("strong",[v._v("声明：")]),v._v("@mixin name($param:value){}")]),v._v(" "),_("p",[_("strong",[v._v("调用：")]),v._v("@include name(value);")]),v._v(" "),_("p",[v._v(">>>声明时，可以有参，可以无参；可带默认值，也可不带；但是，调用时，必须符合声明规范。同less")]),v._v(" "),_("p",[v._v(">>>**优点：**可以传参，不会生成同名class；")]),v._v(" "),_("p",[v._v(">>>**缺点：**会将混合宏中的代码，copy到对应的选择器中，产生冗余代码！")]),v._v(" "),_("p",[_("strong",[v._v("②继承：")])]),v._v(" "),_("p",[_("strong",[v._v("声明：")]),v._v(".class{}")]),v._v(" "),_("p",[_("strong",[v._v("调用：")]),v._v("@extend .class;")]),v._v(" "),_("p",[v._v(">>>**优点：**继承的相同代码，会提取到并集选择器中，减少冗余代码")]),v._v(" "),_("p",[v._v(">>>**缺点：**无法进行传参，会在css中，生成一个同名class")]),v._v(" "),_("p",[_("strong",[v._v("③占位符：")])]),v._v(" "),_("p",[_("strong",[v._v("声明：")]),v._v("&class{}")]),v._v(" "),_("p",[_("strong",[v._v("调用：")]),v._v("@extend %class;")]),v._v(" "),_("p",[v._v(">>>**优点：**继承相同代码，会提前到并集选择器；不会生成同名的class选择器")]),v._v(" "),_("p",[v._v(">>>**缺点：**无法进行传参")]),v._v(" "),_("p",[v._v("**综上所述：**当需要传递参数时，用混合宏；当有现成的class时用继承；当不需要参数，也不需要class时，用占位符")])]),v._v(" "),_("p",[v._v("5、if条件结构：")]),v._v(" "),_("blockquote",[_("p",[v._v("@if 条件 {}@else {}")])]),v._v(" "),_("p",[v._v("6、for循环结构：")]),v._v(" "),_("blockquote",[_("p",[v._v("//不包含10;")]),v._v(" "),_("p",[v._v("@for $i from 1 to 10{}")]),v._v(" "),_("p",[v._v("//包含10;")]),v._v(" "),_("p",[v._v("@for $i from 1 through 10{}")])]),v._v(" "),_("p",[v._v("7、while循环结构：")]),v._v(" "),_("blockquote",[_("p",[v._v("$j: 1;")]),v._v(" "),_("p",[v._v("@while $j<10 {")]),v._v(" "),_("p",[v._v("​    .while#{$j} {　　　　border:#{$j}px solid red;")]),v._v(" "),_("p",[v._v("}")]),v._v(" "),_("p",[v._v("$j: $j+1;")]),v._v(" "),_("p",[v._v("}")])]),v._v(" "),_("p",[v._v("8、each循环遍历")]),v._v(" "),_("blockquote",[_("p",[v._v("@each item in a,b,c,d{//item表示每一项}")])]),v._v(" "),_("p",[v._v("9、函数：")]),v._v(" "),_("blockquote",[_("p",[v._v("@function func($length) {　　$length1:$length*5;　　@return $length1;}//调用：")]),v._v(" "),_("p",[v._v("func(10px);")])]),v._v(" "),_("p",[v._v("10、使用...将传进来的所有参数，接收到一个变量中")]),v._v(" "),_("blockquote",[_("p",[v._v("@mixin bordeRadius($param1...) {　　//使用...将传进来的所有参数，接收到一个变量中")]),v._v(" "),_("p",[v._v("border-radius:$param1;　　-webkit-border-radius:$param1;}")])]),v._v(" "),_("p",[v._v("四. 总结")]),v._v(" "),_("blockquote",[_("p",[v._v("不管是Sass，还是Less，")]),v._v(" "),_("p",[v._v("都可以视为一种基于CSS之上的高级语言，")]),v._v(" "),_("p",[v._v("其目的是使得CSS开发更灵活和更强大，")]),v._v(" "),_("p",[v._v("Sass的功能比Less强大,")]),v._v(" "),_("p",[v._v("基本可以说是一种真正的编程语言了，")]),v._v(" "),_("p",[v._v("Less则相对清晰明了,易于上手,对编译环境要求比较宽松。")]),v._v(" "),_("p",[v._v("考虑到编译Sass要安装Ruby,而Ruby官网在国内访问不了,个人在实际开发中更倾向于选择Less，")]),v._v(" "),_("p",[v._v("但也会去尝试使用sass，毕竟为以后的工作做准备。")])]),v._v(" "),_("p",[v._v("五.扩展思考")]),v._v(" "),_("blockquote",[_("p",[v._v("处理机制不一样会带来什么不同？")]),v._v(" "),_("p",[v._v("因为Less与Sass处理机制不一样，")]),v._v(" "),_("p",[v._v("前者是通过客户端处理的，")]),v._v(" "),_("p",[v._v("后者是通过服务端处理，")]),v._v(" "),_("p",[v._v("相比较之下前者解析js会比后者慢一点。")])])])}),[],!1,null,null,null);_.default=e.exports}}]);